blueprint:
  name: Doorbell Notification with Snapshot (Multiple Devices, Multiple Cameras)
  description: Announce on Google devices and send camera snapshot to app when a doorbell is pressed.
  domain: automation
  input:
    doorbells:
      name: Doorbells
      description: Select the binary sensors representing your doorbells (multiple allowed).
      selector:
        entity:
          domain: binary_sensor
          multiple: true
          filter:
            - domain: binary_sensor
    google_device:
      name: Google Devices
      description: The Google devices to make the announcement on (multiple allowed).
      selector:
        entity:
          domain: media_player
          multiple: true
          filter:
            - domain: media_player
      default: ""
    message:
      name: Message (Optional)
      description: 'default: "There is Somebody at the Door!"'
      default: "There is Somebody at the Door!"
    cameras:
      name: Cameras
      description: Select the cameras to use for snapshots (multiple allowed).
      selector:
        entity:
          domain: camera
          multiple: true
          filter:
            - domain: camera
    notify_devices:
      name: Devices to Notify (Mobile App)
      description: Devices running the Home Assistant app to receive notifications (multiple allowed).
      selector:
        device:
          integration: mobile_app
          multiple: true
    notification_title:
      name: Notification title (Optional)
      description: 'default: "There is Somebody at the Door!"'
      default: "There is Somebody at the Door!"
    notification_message:
      name: Notification message (Optional)
      description: 'default: "There is Somebody at the Door!"'
      default: "There is Somebody at the Door!"
    delay:
      name: Delay (Optional)
      description: Wait before creating camera snapshot
      default: ""
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: seconds
          mode: slider

  trigger:
    - platform: state
      entity_id: "{{ trigger.platform.entity_id }}"  # Dynamic trigger entity
      from: "off"
      to: "on"

  variable:
    cameras: !input cameras
    notify_devices: !input notify_devices
    notification_title: !input notification_title
    notification_message: !input notification_message
    snapshot_create_file_path: "/config/www/tmp/snapshot_{{ trigger.platform.entity_id.split('.')[-1] }}.jpg"  # Dynamic filename
    snapshot_access_file_path: "{{ snapshot_create_file_path | replace('/config/www','/local') }}"

  action:
    - service: tts.google_translate_say
      data:
        entity_id: "{{ input.google_device }}"
        message: !input message

    - delay: "{{ delay }}"

    - choose:
      - conditions:
          - condition: template
            value: "{{ trigger.platform.entity_id == 'binary_sensor.doorbell_front' }}"
            sequence:
            - service: camera.snapshot
              entity_id: "{{ cameras[0] }}"
              data:
                filename: "{{ snapshot_create_file_path }}"
      - conditions:
          - condition: template
            value: "{{ trigger.platform.entity_id == 'binary_sensor.doorbell_back' }}"
            sequence:
            - service: camera.snapshot
              entity_id: "{{ cameras[1] }}"
              data:
                filename: "{{ snapshot_create_file_path }}"
      # Add more conditions for additional doorbells and cameras as needed

    - template: "{{ for device in notify_devices ~ ',' if loop.index > 0 }}{{ device }}{{ endfor }}"
      variable_name: device_list

    - mobile_app_notification:
        target: "{{ device_list }}"
        title: "{{ notification_title }}"
        message: "{{ notification_message }}"
        data: >-
          {
              "image": "%s",
              "priority": "high",
              "timeoutAfter": "10000"  # 10 seconds, adjust as needed
          } | format(snapshot_access_file_path)